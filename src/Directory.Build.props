<?xml version="1.0" encoding="utf-8"?>
<Project>
  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" />
  <!-- Language & Compilation Settings -->
  <PropertyGroup>
    <NoWarn>IDE00585,CS8669</NoWarn>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Analyzer & Code Quality Configuration -->
  <!-- https://endjin.com/blog/2022/01/raising-coding-standard-dotnet-analyzers -->
  <!-- https://nikiforovall.github.io/dotnet/2024/09/14/quality-gates-dotnet.html -->
  <!-- https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#code-analysis-properties -->
  <PropertyGroup>
    <AnalysisLevel>latest-All</AnalysisLevel>
    <AnalysisMode>All</AnalysisMode>
    <AnalysisModeGlobalization>None</AnalysisModeGlobalization>
    <AnalysisModeSecurity>All</AnalysisModeSecurity>
    <RunAnalyzersDuringBuild>true</RunAnalyzersDuringBuild>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <CodeAnalysisTreatWarningsAsErrors>false</CodeAnalysisTreatWarningsAsErrors>
  </PropertyGroup>

  <!-- Debug Configuration -->
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <DebugType>full</DebugType>
    <DefineConstants>DEBUG;TRACE;$(DefineConstants)</DefineConstants>
  </PropertyGroup>

  <!-- Release Configuration -->
  <!-- https://stackoverflow.com/questions/5457095/release-generating-pdb-files-why -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <DefineConstants>TRACE;$(DefineConstants)</DefineConstants>
  </PropertyGroup>

  <!-- Miscellaneous Build Options -->
  <PropertyGroup>
    <ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
  </PropertyGroup>

  <!-- Code Analyzers -->
  <ItemGroup>
    <PackageReference Include="Meziantou.Analyzer" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="StyleCop.Analyzers" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="SerilogAnalyzer" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="NetFabric.Hyperlinq.Analyzer" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="SmartanAlyzers.ExceptionAnalyzer" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="Roslynator.Analyzers" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="Roslynator.CodeAnalysis.Analyzers" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="Roslynator.Formatting.Analyzers" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="Microsoft.VisualStudio.Threading.Analyzers" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="AsyncAwaitBestPractices" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="StackExchange.Redis.Analyzer" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="ErrorProne.NET.CoreAnalyzers" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="SonarAnalyzer.CSharp" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
    <PackageReference Include="CSharpGuidelinesAnalyzer" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'" />
  </ItemGroup>

  <!-- Global Usings -->
  <ItemGroup>
    <Using Include="System" />
    <Using Include="System.Linq" />
    <Using Include="System.Collections.ObjectModel" />
    <Using Include="Microsoft.Extensions.DependencyInjection" />
  </ItemGroup>
</Project>
